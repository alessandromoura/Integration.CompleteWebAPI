// <auto-generated />
using System;
using Integration.CompleteWebAPI.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Integration.CompleteWebAPI.Migrations
{
    [DbContext(typeof(ChampionshipDbContext))]
    [Migration("20190521114337_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Integration.CompleteWebAPI.Entities.ChampionshipEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Championship")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<Guid>("FederationId");

                    b.Property<byte[]>("Trophy");

                    b.HasKey("Id");

                    b.HasIndex("FederationId");

                    b.ToTable("Championships");

                    b.HasData(
                        new { Id = new Guid("0d5891d9-9997-4e87-8316-33cf9c55b154"), Championship = "Campeonato Paulista de Futebol", FederationId = new Guid("7b1e286e-6faa-416a-8867-504dec147c84") },
                        new { Id = new Guid("581c69cb-f267-467c-8add-dde491fcfeb7"), Championship = "Brasileirao", FederationId = new Guid("d597bc12-e5d6-4a68-93df-efa52e44abb6") },
                        new { Id = new Guid("ed31e62d-be30-4588-8eeb-a072bdf37c25"), Championship = "Libertadores da America", FederationId = new Guid("c9496af1-ac10-4e9f-8e7a-e92a49a2a337") },
                        new { Id = new Guid("8089fec4-5072-44ef-a3c6-560822d09db1"), Championship = "Mundial de Clubes", FederationId = new Guid("601171de-77ab-480d-a99d-054449e07fcf") }
                    );
                });

            modelBuilder.Entity("Integration.CompleteWebAPI.Entities.FederationEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Acronym")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Federation")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("Federations");

                    b.HasData(
                        new { Id = new Guid("7b1e286e-6faa-416a-8867-504dec147c84"), Acronym = "FPF", Federation = "Federacao Paulista de Futebol" },
                        new { Id = new Guid("d597bc12-e5d6-4a68-93df-efa52e44abb6"), Acronym = "CBF", Federation = "Confederacao Brasileira de Futebol" },
                        new { Id = new Guid("601171de-77ab-480d-a99d-054449e07fcf"), Acronym = "FIFA", Federation = "Federation Internationale de Football Association" },
                        new { Id = new Guid("c9496af1-ac10-4e9f-8e7a-e92a49a2a337"), Acronym = "CONMEBOL", Federation = "Confederacion Sudamericana de Futbol" }
                    );
                });

            modelBuilder.Entity("Integration.CompleteWebAPI.Entities.TeamEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("FoundationDate");

                    b.Property<byte[]>("Logo");

                    b.Property<byte[]>("Mascot");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new { Id = new Guid("0ddde795-1460-43c0-a246-ae8168106f3f"), FoundationDate = new DateTime(1910, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Sport Club Corinthians Paulista" }
                    );
                });

            modelBuilder.Entity("Integration.CompleteWebAPI.Entities.TitleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ChampionshipId");

                    b.Property<DateTime>("Conquered");

                    b.Property<Guid>("TeamId");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.HasIndex("ChampionshipId");

                    b.HasIndex("TeamId");

                    b.ToTable("Titles");
                });

            modelBuilder.Entity("Integration.CompleteWebAPI.Entities.ChampionshipEntity", b =>
                {
                    b.HasOne("Integration.CompleteWebAPI.Entities.FederationEntity", "Federation")
                        .WithMany()
                        .HasForeignKey("FederationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Integration.CompleteWebAPI.Entities.TitleEntity", b =>
                {
                    b.HasOne("Integration.CompleteWebAPI.Entities.ChampionshipEntity", "Championship")
                        .WithMany()
                        .HasForeignKey("ChampionshipId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Integration.CompleteWebAPI.Entities.TitleEntity", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
